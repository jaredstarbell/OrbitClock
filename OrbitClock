Orbit[] orbits;
int max = 1000;
int num = 0;

int tick = 1000;

float theta = random(TWO_PI);
float otheta = theta;
float omega = PI/22;
float r = random(width*.2,width*.45);
float rd = 0;
float td = PI/random(100,300);



void setup() {
  size(1200,1200);
  background(0);
  smooth(4);
 
  orbits = new Orbit[max];
}

void draw() {
  background(0);
  for (int i=0;i<num;i++) {
    orbits[i].move();
    orbits[i].connect();
  }
  for (int i=0;i<num;i++) orbits[i].render();
  
  
  if (num<max) {
    orbits[num] = new Orbit(num,theta,td,r,0,tick);
    
    float b = 1000;
    if (r==0) r = random(width*.05,width*.45);
    if (random(b)<4) tick=1000;
    if (random(b)<6) tick+=1000;
    if (random(b)<2) tick/=4;
    if (random(b)<3) r = random(width*.05,width*.45);
    if (random(b)<2) td = PI/random(100,300);
    if (random(b)<2 || r>width*sqrt(2)) {
      theta = random(TWO_PI);
      otheta = theta;
      float d = random(15,40);
      r = random(width*.05,width*.45);
      omega = atan(d/r);
      //println(omega);
      rd= 0;
      //println(low+" .. "+high);
    }
    
    if (random(b)<1  || theta>=otheta+TWO_PI) {
      theta = random(TWO_PI);
      otheta = theta;
      omega = 0;
      rd = random(width*.01,width*.05);
      r = random(width*.05,width*.45);
    }
    
    theta+=omega;
    r+=rd;
    num++;
  }    
}

